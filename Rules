#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

ignore '/assets/stylesheets/_*'

compile '/CNAME' do
end

compile '/highlight.css' do
  filter :erb
  write item.identifier.to_s
end

compile '/**/*.html' do
  layout '/default.*'

  if item.identifier =~ '**/index.*'
    write item.identifier.to_s
  else
    write item.identifier.without_ext + '/index.html'
  end
end

compile '/index.html' do
  filter :erb
  # if item.identifier =~ '**/index.*'
  #   write item.identifier.to_s
  # else
  #   write item.identifier.without_ext + '/index.html'
  # end
end

compile '/**/*.md' do
  filter :kramdown
  layout '/default.*'
  if item.identifier =~ '**/index.*'
    write item.identifier.without_ext + '.html'
  else
    write item.identifier.without_ext + '/index.html'
  end
end

layout '/*', :erb

compile '/reference/endpoints/*' do
  filter :erb
  filter :kramdown, toc_levels: [2], header_offset: 1, enable_coderay: false
  filter :colorize_syntax, default_colorizer: :pygmentsrb
  layout item[:layout] || '/reference.html'
end

compile '/reference/*' do
  filter :erb
  filter :kramdown, toc_levels: [2], header_offset: 1, enable_coderay: false
  filter :colorize_syntax, default_colorizer: :pygmentsrb
  layout item[:layout] || '/reference.html'
  write item.identifier.to_s
end

compile '/guides/*' do
  filter :erb
  filter :kramdown, toc_levels: [2], header_offset: 1, enable_coderay: false
  filter :colorize_syntax, default_colorizer: :pygmentsrb
  layout '/guides.html'
  layout '/head.html'
  layout '/json_response.html'
  layout item[:layout] || '/guides.html'
end

compile %r{/assets/javascripts/.+} do
  filter :sprockets, {
    :css_compressor => :scss,
    :js_compressor  => :uglifier
  }
  write item.identifier.to_s
end

compile '/assets/stylesheets/*.scss' do
  # Setup 1
  # filter :sass, { syntax: :scss, style: :compact } # => This alone: Sass::SyntaxError: File to import not found or unreadable: bootstrap-bookingsync. Load path: Nanoc Sass Importer

  #
  # Setup 1.1
  # filter :sass, syntax: :scss
  # write @item.identifier.without_ext + '.css'
  # => Sass::SyntaxError: File to import not found or unreadable: bootstrap-bookingsync. Load path: Nanoc Sass Importer


  # Setup 2
  path = @item.identifier.without_ext + '.css'
  options = { syntax: :scss, style: :compact, css_path: path, sourcemap_path: :inline }
  filter :sass, options
  # => Sass::SyntaxError: File to import not found or unreadable: bootstrap-bookingsync. Load path: Nanoc Sass Importer


  # ---
  # NOTE: Can it help? https://groups.google.com/g/nanoc/c/_3VQxO6wOCU/m/MfhipttIUBsJ?pli=1
  # ---
  #  Anyway we are getting the application.sccs in the output.

  # --
  # write @item.identifier.without_ext + '.css'
end

compile '*' do
  filter :erb
  filter :kramdown, toc_levels: [2], header_offset: 1, enable_coderay: false
  filter :colorize_syntax, default_colorizer: :pygmentsrb
  layout item[:layout] || '/default.html'
end

compile '/**/*' do
  write item.identifier.to_s
end

route '/assets/*/' do
  Nanoc::Sprockets::Helper.asset_path(item)
end

route '/CNAME' do
  '/CNAME'
end

route '/static/*' do
  # /static/foo.html/ → /foo.html
  item.identifier[7..-2]
end

compile '/static/*' do
end

# TODO: Think how to make it recursive
compile '/static/images/*' do
  write item.identifier.to_s
end

compile '/static/images/understanding-los/*' do
  write item.identifier.to_s
end

compile '/static/images/webhook-subscriptions/*' do
  write item.identifier.to_s
end

route '/highlight' do
  '/highlight.css'
end

route '*' do
  item.identifier + 'index.html'
end

